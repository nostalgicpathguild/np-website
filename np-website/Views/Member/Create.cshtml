@model np_website.Models.NewMemberModel

@{
    ViewBag.Title = "Create a Member Account";
}

<h2>Create a Member Account</h2>

@using (Html.BeginForm("Create", "Member", FormMethod.Post))
{
    if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
    {
<div class="alert alert-dismissible alert-danger">
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <strong>Please enter all required fields</strong>
    @Html.ValidationSummary(false, "Errors: ")
</div>
    }

    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { @type = "email", @class = "form-control" })
                <small id="emailHelp" class="form-text text-muted">This is used to authenticate your account.  We'll never share your email with anyone else.</small>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CharacterName)
                @Html.TextBoxFor(m => m.CharacterName, new { @class = "form-control" })
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                @Html.TextBoxFor(m => m.Password, new { @type = "password", @class = "form-control" })
                <small id="passwordHelp" class="form-text text-muted">Please use a strong password.</small>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PasswordRepeat)
                @Html.TextBoxFor(m => m.PasswordRepeat, new { @type = "password", @class = "form-control" })
            </div>
        </div>
    </div>

    <button class="btn btn-success" type="submit">Create Account</button>
}